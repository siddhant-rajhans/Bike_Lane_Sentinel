#!/bin/bash
# Start-hackathon script for Bike Lane Sentinel

echo "🚲 Starting Bike Lane Sentinel Hackathon Project 🚲"

# Function to get local IP address
get_local_ip() {
  # Try to get IP using different methods depending on OS
  if [[ "$OSTYPE" == "darwin"* ]]; then
    # macOS
    local_ip=$(ifconfig | grep "inet " | grep -v 127.0.0.1 | awk '{print $2}' | head -n 1)
  else
    # Linux and other systems
    local_ip=$(hostname -I | awk '{print $1}')
  fi
  echo "$local_ip"
}

# Get the local IP address
LOCAL_IP=$(get_local_ip)

# Check if .env file exists, if not, create from example
if [ ! -f "./backend/.env" ]; then
  echo "Creating .env file from env.example..."
  cp ./backend/env.example ./backend/.env
  echo "⚠️ Please edit ./backend/.env and add your MOONDREAM_API_KEY ⚠️"
fi

# Create or update frontend .env with local IP address
echo "Setting up frontend API connection..."
echo "# Auto-generated by start-hackathon.sh" > ./frontend/.env
echo "EXPO_PUBLIC_API_URL=http://${LOCAL_IP}:3000/api" >> ./frontend/.env
echo "🔌 API URL set to: http://${LOCAL_IP}:3000/api"

# Install dependencies if needed
if [ ! -d "./backend/node_modules" ]; then
  echo "Installing backend dependencies..."
  cd backend && npm install
  cd ..
fi

if [ ! -d "./frontend/node_modules" ]; then
  echo "Installing frontend dependencies..."
  cd frontend && npm install
  cd ..
fi

# Check for required packages and install them if missing
echo "Checking for required packages..."

# Check for expo-camera
if ! grep -q "expo-camera" ./frontend/node_modules/package.json 2>/dev/null; then
  echo "Installing expo-camera package..."
  cd frontend && npm install expo-camera
  cd ..
fi

# Check for expo-location
if ! grep -q "expo-location" ./frontend/node_modules/package.json 2>/dev/null; then
  echo "Installing expo-location package..."
  cd frontend && npm install expo-location
  cd ..
fi

# Build backend TypeScript files
echo "Building backend..."
cd backend && npm run build
cd ..

# Start backend and frontend in separate terminal windows
echo "Starting servers..."

# Start backend server
osascript <<EOF
tell application "Terminal"
  do script "cd \"$PWD/backend\" && npm start"
end tell
EOF

# Start frontend server (expo)
osascript <<EOF
tell application "Terminal"
  do script "cd \"$PWD/frontend\" && npm start"
end tell
EOF

echo "✅ Servers starting, check the terminal windows for details"
echo "Backend API will be available at http://localhost:3000/api"
echo "Frontend will be available through Expo - follow instructions in the terminal"
